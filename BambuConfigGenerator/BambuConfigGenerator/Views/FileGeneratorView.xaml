<views:MvxWpfView
    x:Class="BambuConfigGenerator.Views.FileGeneratorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:BambuConfigGenerator.Core.ViewModels;assembly=BambuConfigGenerator.Core"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    Width="1000"
    Height="750"
    d:DataContext="{d:DesignInstance viewModels:FileGeneratorViewModel}"
    x:TypeArguments="viewModels:FileGeneratorViewModel"
    mc:Ignorable="d">
    <views:MvxWpfView.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="20,15,0,15" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Foreground" Value="#7EE07E" />
            <Setter Property="Background" Value="#383838" />
            <Setter Property="BorderBrush" Value="#424242" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#FAFAFA" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="20,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5,5,0,5" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Foreground" Value="#7EE07E" />
            <Setter Property="Background" Value="#2E2E2E" />
            <Setter Property="BorderBrush" Value="#424242" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="160" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#64569DE5" />
                    <Setter Property="BorderBrush" Value="#569DE5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListView">
            <Setter Property="Background" Value="#383838" />
            <Setter Property="BorderBrush" Value="#424242" />
            <Setter Property="Foreground" Value="#7EE07E" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="#7EE07E" />
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="#FF3F3F3F"
                    BorderBrush="#FF97A0A5"
                    BorderThickness="1"
                    CornerRadius="0" />
                <Border
                    Grid.Column="0"
                    Margin="1"
                    Background="#FF3F3F3F"
                    BorderBrush="#FF97A0A5"
                    BorderThickness="0,0,1,0"
                    CornerRadius="0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    Fill="White" />
            </Grid>
            <!--<ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border
                x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Grid.Column="2"
                                ClickMode="Press"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{StaticResource ComboBoxToggleButton}" />
                            <ContentPresenter
                                Name="ContentSite"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="#FF3F3F3F"
                                Focusable="True"
                                Foreground="Green"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Visibility="Hidden" />
                            <Popup
                                Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">

                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="#FF3F3F3F"
                                        BorderBrush="#888888"
                                        BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false" />
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers />
        </Style>

        <!--  SimpleStyles: ComboBoxItem  -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </views:MvxWpfView.Resources>

    <Grid Background="#242424">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Brand  -->
        <Label
            Grid.Row="0"
            Grid.Column="0"
            Content="Brand:" />
        <TextBox
            Grid.Row="0"
            Grid.Column="1"
            HorizontalContentAlignment="Left"
            Text="{Binding FilamentBrand}"
            TextWrapping="Wrap" />

        <!--  Type  -->
        <Label
            Grid.Row="1"
            Grid.Column="0"
            Content="Type:" />
        <ComboBox
            Grid.Row="1"
            Grid.Column="1"
            Width="200"
            Height="34"
            Margin="20,10"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            HorizontalContentAlignment="Center"
            DisplayMemberPath="Name"
            ItemsSource="{Binding FilamentTypes}"
            SelectedItem="{Binding SelectedFilamentType}" />

        <!--  Serial  -->
        <Label
            Grid.Row="2"
            Grid.Column="0"
            Content="Serial:" />
        <TextBox
            Grid.Row="2"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            Text="{Binding Serial}"
            TextWrapping="Wrap">
            <TextBox.Style>
                <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" TargetType="TextBox">
                    <Setter Property="Margin" Value="20,15,0,15" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Foreground" Value="#7EE07E" />
                    <Setter Property="Background" Value="#383838" />
                    <Setter Property="BorderBrush" Value="#424242" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Resources>
                        <VisualBrush
                            x:Key="CueBannerBrush"
                            AlignmentX="Left"
                            AlignmentY="Center"
                            Stretch="None">
                            <VisualBrush.Visual>
                                <Label
                                    Background="Transparent"
                                    Content="Color, model, serial..."
                                    FontSize="18"
                                    Foreground="#727272" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            <Setter Property="BorderBrush" Value="#424242" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            <Setter Property="BorderBrush" Value="#424242" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="#383838" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <!--  Recommended Temperature  -->
        <Label
            Grid.Row="3"
            Grid.Column="0"
            Content="Temperatures:" />
        <StackPanel
            Grid.Row="3"
            Grid.Column="1"
            Orientation="Horizontal">
            <TextBox
                Width="50"
                HorizontalAlignment="Left"
                HorizontalContentAlignment="Center"
                Text="{Binding RecommendedTemperatureMin}"
                TextWrapping="Wrap" />
            <TextBox
                Width="50"
                HorizontalAlignment="Left"
                HorizontalContentAlignment="Center"
                Text="{Binding RecommendedTemperatureMax}"
                TextWrapping="Wrap" />
        </StackPanel>

        <!--  Flow  -->
        <Label
            Grid.Row="4"
            Grid.Column="0"
            Content="Filament Flow Ratio:" />
        <TextBox
            Grid.Row="4"
            Grid.Column="1"
            Width="120"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            Text="{Binding FilamentFlowRatio}"
            TextWrapping="Wrap" />

        <!--  Template  -->
        <Label
            Grid.Row="5"
            Grid.Column="0"
            Content="Template Path:" />
        <TextBox
            Grid.Row="5"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Text="{Binding FolderWithTemplatesPath}"
            TextWrapping="Wrap" />
        <Button
            Grid.Row="5"
            Grid.Column="2"
            Command="{Binding SelectFolderWithTemplates}"
            Content="Select file" />

        <!--  OUTPUT  -->
        <Label
            Grid.Row="6"
            Grid.Column="0"
            Content="Output Folder:" />
        <TextBox
            Grid.Row="6"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Text="{Binding SelectedFolder}"
            TextWrapping="Wrap" />
        <Button
            Grid.Row="6"
            Grid.Column="2"
            Command="{Binding SelectFolderCommand}"
            Content="Select Folder" />

        <!--  Printer & nozzle  -->
        <Grid
            Grid.Row="7"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Margin="10,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Vertical">
                <Label Margin="20,0" Content="Select printers:" />
                <ListView
                    Width="200"
                    Margin="20,0"
                    HorizontalAlignment="Left"
                    ItemsSource="{Binding Printers}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox
                                    Margin="5"
                                    Content="{Binding Name}"
                                    IsChecked="{Binding IsSelected}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListView>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical">
                <Label Margin="20,0" Content="Select nozzles:" />
                <ListView
                    Width="200"
                    Margin="20,0"
                    ItemsSource="{Binding Nozzles}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox
                                    Margin="5"
                                    Content="{Binding Name}"
                                    IsChecked="{Binding IsSelected}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListView>
            </StackPanel>
        </Grid>

        <!--  GENERATE!  -->
        <Button
            Grid.Row="8"
            Grid.Column="2"
            Width="180"
            Height="62"
            Margin="10,10,30,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Command="{Binding GenerateCommand}"
            Content="Generate!" />
    </Grid>
</views:MvxWpfView>
